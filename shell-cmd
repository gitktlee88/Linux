- find 커맨드는 기본적으로 하위 폴더들을 재귀(recursive) 탐색하기 때문에 가장 상위 폴더의 경로를 써주기만 해도 
  하위 폴더들을 모두 뒤져서 파일들을 찾아 나열해 준다.
  
> find /etc -type f -exec cat '{}' \;
> find ./ -name "*.sh" -exec grep 'abc' {} \;
> find ./ -name "test" 2>/dev/null             : ignore errors whilst searching.

find 커맨드로 /etc 디렉토리에서 type이 파일인것들을 찾아서 -exec(실행) 시켜주세요 – 라는 의미이다. 
{ }가 의미하는것은 find 에서 찾은 파일을 말하는 것입니다. 그파일을 exec 다음에 오는 커맨드(cat)로 실행시켜 달라는 것.

그런데 “\;”는 exec 커맨드가 bash에서 실행될때에는 “\;” 라는 표기자를 만날때까지 읽고 실행시킨다.

> grep 'string' * -R | grep -Ev 'tmp|log'

> mv test.txt before-test.txt       : 파일이나 디렉토리를 다른 위치로 이동시키거나 파일명을 변경하고자 할때 사용한다.

> rm -r home/     : home 디렉토리를 삭제 (subdir 포함)

> cp -rp /home /home2    : 복사할때 파일의 소유자,그룹자,권한,시간정보등이 그대로 복사

폴더를 복사하는 방법(Local to remote)
> scp -r /home/banana  pklee1@domain.name.net:/home/pklee1

> df -h    : to see file system

> ps -ef | grep httpd ( jboss, tomcat, ... )

touch ---- create multiple files with a single line text at one command.

> touch f{0..12} ; echo 'a first line' | tee f{0..12}
> echo 'a second line' | tee -a f{0..12}               -a  option appends output to existing file
> touch f211.txt ; cat f{2..11} | tee f211.txt         -to merge multiple files into a single file ( f211.txt ) 

if you want to be more eloquent, will empty logfile (actually they will truncate it to zero size).
> cat /dev/null > logfile

> cat bar.txt >> foo.txt       ....   to append a contains of bar.txt to to foo.txt
> echo 'text to append' >> file2
> printf "text to append\n" >> fileName

> head -n 20 test      : first 20 lines, <-c> 20 characters
> tail -n 20 test      : last 20 lines, <-c> 20 characters

cat test.txt | tr '[:upper:]' '[:lower:]'    to convert  to lowercase in the test.txt file.
